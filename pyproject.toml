[project]
name = "modern-python-project"
dynamic = ["version"]
description = "Add your description here"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.12"
authors = [
    { name = "Joscha Feth", email = "joscha@feth.com" }
]
license = { text = "MIT" }
urls = {"Repository" = "https://github.com/joscha/modern-python-project"}
keywords = ["python", "devenv", "template"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
]

dependencies = [
    "click>=8.2.1",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-watcher>=0.4.3",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "syrupy>=4.9.1",    
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::DeprecationWarning:pytz.*:"
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(message)s"
addopts = "--cov --cov-report=term-missing --cov-report=html"

[tool.hatch.build]
include = [
  "modern_python_project"
]
exclude = ["modern_python_project_tests"]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.ruff]
lint.extend-select = ["I"]
# unsafe-fixes = true

[tool.uv]
resolution = "highest"
default-groups = ["dev"]

[tool.coverage.html]
directory = "coverage_html"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pass",
    "def parse_args",  # Exclude all parse_args functions
    "def parse_args\\(.*\\):"  # Also match parse_args with type hints
]
show_missing = true
fail_under = 80

[tool.coverage.run]
source = ["modern_python_project"]
#branch = true
omit = [
    "modern_python_project_tests/*",
    "**/__init__.py"
]

[tool.pytest-watcher]
now = true
clear = true
delay = 0.2
runner = "pytest"
runner_args = ["-s", "-vv"]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"
# TODO: enable strict mode once we have a tag
# strict = true
bump = true
latest-tag = true
